# Generated by Django 2.0 on 2017-12-02 18:18

import apps.core.utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255)),
                ('description', models.TextField()),
                ('logo', models.ImageField(upload_to=apps.core.utils.image_upload_to)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to=apps.core.utils.image_upload_to)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lng', models.FloatField(blank=True, null=True)),
                ('phone1', models.CharField(max_length=15)),
                ('phone2', models.CharField(blank=True, max_length=15, null=True)),
                ('phone3', models.CharField(blank=True, max_length=15, null=True)),
                ('phone4', models.CharField(blank=True, max_length=15, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('google_plus', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HomePageTopImageSlider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(blank=True, max_length=30, null=True)),
                ('image', models.ImageField(upload_to=apps.core.utils.image_upload_to)),
                ('description', models.CharField(blank=True, max_length=80, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sliders', to='company.CompanyDetail')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At.')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Updated At.')),
                ('image', models.ImageField(blank=True, help_text='Featured Image for the Content', upload_to=apps.core.utils.image_upload_to, verbose_name='image')),
                ('image_caption', models.TextField(blank=True, help_text="Image's caption.", verbose_name='caption')),
                ('image_source', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('icon', models.ImageField(blank=True, null=True, upload_to=apps.core.utils.image_upload_to)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='company.CompanyDetail')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('designation', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to=apps.core.utils.image_upload_to)),
                ('joined_date', models.DateField(max_length=10)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('google_plus', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='company.CompanyDetail')),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At.')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Updated At.')),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to=apps.core.utils.image_upload_to)),
                ('organization', models.CharField(max_length=100)),
                ('designation', models.CharField(max_length=100)),
                ('text', models.CharField(max_length=255)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testimonials', to='company.CompanyDetail')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
